
public class Board {
	
	private int[][] pits = new int[2][6];
	private int turn = 0, scorePlayer1 = 0, scorePlayer2 = 0;
	
	public Board()
	{
		for(int r = 0; r<pits.length; r++)
			for(int c = 0; c<pits[0].length; c++)
				pits[r][c] = 3;
	}
	
	public Board(int stoneStart)
	{
		for(int r = 0; r<pits.length; r++)
			for(int c = 0; c<pits[0].length; c++)
				pits[r][c] = stoneStart;
	}
	
	public void move(int pit)
	{
		int pile = removeStones(pit);
		
		if(pit > 6)
		{
			pile = bottomMove(pit-6, pile);
			
		}
		else
		{
			pile = topMove(pit, pile);
			
		}
	}
	
	public int topMove(int pit, int pile)
	{
		for(int a = 5; a == 0; a--)
		{
			if(pile > 0)
			{
				pits[0][a]++;
				pile--;
			}
			if(pile != 0 && a == 0)
			{
				if(turn%2 == 0)
					scorePlayer1++;
				else
					return pile;
			}
		}
		return 0;
	}
	
	public int bottomMove(int pit, int pile)
	{
		for(int a = 0; a < pits[1].length; a++)
		{
			if(pile > 0)
			{
				pits[1][a]++;
				pile--;
			}
			if(pile != 0 && a == pits[1].length)
			{
				if(turn%2 == 1)
					scorePlayer2++;
				else
					return pile;
			}
		}
		return 0;
	}
	
	public int removeStones(int pit)
	{
		int stonesRemoved = 0;
		
		if(pit <= 6)
		{
			stonesRemoved = pits[1][pit];
			pits[0][pit] = 0;
		}
		else
		{
			stonesRemoved = pits[2][pit-6];
			pits[1][pit-6] = 0;
		}
		
		return stonesRemoved;
		
	}
	
	public void checkIfEmpty()
	{
		
	}

	public int getTurn() {
		return turn;
	}

	public void setTurn(int turn) {
		this.turn = turn;
	}

	public int getScorePlayer1() {
		return scorePlayer1;
	}

	public void setScorePlayer1(int scorePlayer1) {
		this.scorePlayer1 = scorePlayer1;
	}

	public int getScorePlayer2() {
		return scorePlayer2;
	}

	public void setScorePlayer2(int scorePlayer2) {
		this.scorePlayer2 = scorePlayer2;
	}
	
	public int getStones(int row, int column)
	{
		return pits[row][column];
	}
	
	
}
